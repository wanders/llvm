#===-- Generated python interface definitions for 'ExecutionEngine.h' ------===#
#
#                     The LLVM Compiler Infrastructure
#
# This file is distributed under the University of Illinois Open Source
# License. See LICENSE.TXT for details.
#
#===------------------------------------------------------------------------===#
#
# This file is automatically generated by 'generate-from-includes.py',
# do not edit manually.
#
#===-----------------------------------------------------------------------====#

import ctypes
from ..common import c_object_p

function_declarations = {
    'LLVMLinkInJIT': (None,
                      []),
    'LLVMLinkInMCJIT': (None,
                        []),
    'LLVMLinkInInterpreter': (None,
                              []),
    'LLVMCreateGenericValueOfInt': (c_object_p,
                                    ['LLVMTypeRef', ctypes.c_ulonglong, 'LLVMBool']),
    'LLVMCreateGenericValueOfPointer': (c_object_p,
                                        [ctypes.c_void_p]),
    'LLVMCreateGenericValueOfFloat': (c_object_p,
                                      ['LLVMTypeRef', ctypes.c_double]),
    'LLVMGenericValueIntWidth': (ctypes.c_uint,
                                 ['LLVMGenericValueRef']),
    'LLVMGenericValueToInt': (ctypes.c_ulonglong,
                              ['LLVMGenericValueRef', 'LLVMBool']),
    'LLVMGenericValueToPointer': (ctypes.c_void_p,
                                  ['LLVMGenericValueRef']),
    'LLVMGenericValueToFloat': (ctypes.c_double,
                                ['LLVMTypeRef', 'LLVMGenericValueRef']),
    'LLVMDisposeGenericValue': (None,
                                ['LLVMGenericValueRef']),
    'LLVMCreateExecutionEngineForModule': ('LLVMBool',
                                           [ctypes.POINTER(c_object_p), 'LLVMModuleRef', ctypes.POINTER(ctypes.c_char_p)]),
    'LLVMCreateInterpreterForModule': ('LLVMBool',
                                       [ctypes.POINTER(c_object_p), 'LLVMModuleRef', ctypes.POINTER(ctypes.c_char_p)]),
    'LLVMCreateJITCompilerForModule': ('LLVMBool',
                                       [ctypes.POINTER(c_object_p), 'LLVMModuleRef', ctypes.c_uint, ctypes.POINTER(ctypes.c_char_p)]),
    'LLVMInitializeMCJITCompilerOptions': (None,
                                           [ctypes.POINTER('LLVMMCJITCompilerOptions'), ctypes.c_size_t]),
    'LLVMCreateMCJITCompilerForModule': ('LLVMBool',
                                         [ctypes.POINTER(c_object_p), 'LLVMModuleRef', ctypes.POINTER('LLVMMCJITCompilerOptions'), ctypes.c_size_t, ctypes.POINTER(ctypes.c_char_p)]),
    'LLVMCreateExecutionEngine': ('LLVMBool',
                                  [ctypes.POINTER(c_object_p), 'LLVMModuleProviderRef', ctypes.POINTER(ctypes.c_char_p)]),
    'LLVMCreateInterpreter': ('LLVMBool',
                              [ctypes.POINTER(c_object_p), 'LLVMModuleProviderRef', ctypes.POINTER(ctypes.c_char_p)]),
    'LLVMCreateJITCompiler': ('LLVMBool',
                              [ctypes.POINTER(c_object_p), 'LLVMModuleProviderRef', ctypes.c_uint, ctypes.POINTER(ctypes.c_char_p)]),
    'LLVMDisposeExecutionEngine': (None,
                                   ['LLVMExecutionEngineRef']),
    'LLVMRunStaticConstructors': (None,
                                  ['LLVMExecutionEngineRef']),
    'LLVMRunStaticDestructors': (None,
                                 ['LLVMExecutionEngineRef']),
    'LLVMRunFunctionAsMain': (ctypes.c_int,
                              ['LLVMExecutionEngineRef', 'LLVMValueRef', ctypes.c_uint, ctypes.POINTER(ctypes.c_char_p), ctypes.POINTER(ctypes.c_char_p)]),
    'LLVMRunFunction': (c_object_p,
                        ['LLVMExecutionEngineRef', 'LLVMValueRef', ctypes.c_uint, ctypes.POINTER(c_object_p)]),
    'LLVMGetPointerToFunction': (ctypes.c_void_p,
                                 ['LLVMExecutionEngineRef', 'LLVMValueRef']),
    'LLVMFreeMachineCodeForFunction': (None,
                                       ['LLVMExecutionEngineRef', 'LLVMValueRef']),
    'LLVMAddModule': (None,
                      ['LLVMExecutionEngineRef', 'LLVMModuleRef']),
    'LLVMAddModuleProvider': (None,
                              ['LLVMExecutionEngineRef', 'LLVMModuleProviderRef']),
    'LLVMRemoveModule': ('LLVMBool',
                         ['LLVMExecutionEngineRef', 'LLVMModuleRef', ctypes.POINTER(c_object_p), ctypes.POINTER(ctypes.c_char_p)]),
    'LLVMRemoveModuleProvider': ('LLVMBool',
                                 ['LLVMExecutionEngineRef', 'LLVMModuleProviderRef', ctypes.POINTER(c_object_p), ctypes.POINTER(ctypes.c_char_p)]),
    'LLVMFindFunction': ('LLVMBool',
                         ['LLVMExecutionEngineRef', ctypes.c_char_p, ctypes.POINTER(c_object_p)]),
    'LLVMRecompileAndRelinkFunction': (ctypes.c_void_p,
                                       ['LLVMExecutionEngineRef', 'LLVMValueRef']),
    'LLVMGetExecutionEngineTargetData': (c_object_p,
                                         ['LLVMExecutionEngineRef']),
    'LLVMAddGlobalMapping': (None,
                             ['LLVMExecutionEngineRef', 'LLVMValueRef', ctypes.c_void_p]),
    'LLVMGetPointerToGlobal': (ctypes.c_void_p,
                               ['LLVMExecutionEngineRef', 'LLVMValueRef']),
    'LLVMCreateSimpleMCJITMemoryManager': (c_object_p,
                                           [ctypes.c_void_p, 'LLVMMemoryManagerAllocateCodeSectionCallback', 'LLVMMemoryManagerAllocateDataSectionCallback', 'LLVMMemoryManagerFinalizeMemoryCallback', 'LLVMMemoryManagerDestroyCallback']),
    'LLVMDisposeMCJITMemoryManager': (None,
                                      ['LLVMMCJITMemoryManagerRef']),
}

enum_declarations = {
}

