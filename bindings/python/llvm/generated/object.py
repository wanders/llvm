#===-- Generated python interface definitions for 'Object.h' ---------------===#
#
#                     The LLVM Compiler Infrastructure
#
# This file is distributed under the University of Illinois Open Source
# License. See LICENSE.TXT for details.
#
#===------------------------------------------------------------------------===#
#
# This file is automatically generated by 'generate-from-includes.py',
# do not edit manually.
#
#===-----------------------------------------------------------------------====#

import ctypes
from ..common import c_object_p

function_declarations = {
    'LLVMCreateObjectFile': (c_object_p,
                             ['LLVMMemoryBufferRef']),
    'LLVMDisposeObjectFile': (None,
                              ['LLVMObjectFileRef']),
    'LLVMGetSections': (c_object_p,
                        ['LLVMObjectFileRef']),
    'LLVMDisposeSectionIterator': (None,
                                   ['LLVMSectionIteratorRef']),
    'LLVMIsSectionIteratorAtEnd': ('LLVMBool',
                                   ['LLVMObjectFileRef', 'LLVMSectionIteratorRef']),
    'LLVMMoveToNextSection': (None,
                              ['LLVMSectionIteratorRef']),
    'LLVMMoveToContainingSection': (None,
                                    ['LLVMSectionIteratorRef', 'LLVMSymbolIteratorRef']),
    'LLVMGetSymbols': (c_object_p,
                       ['LLVMObjectFileRef']),
    'LLVMDisposeSymbolIterator': (None,
                                  ['LLVMSymbolIteratorRef']),
    'LLVMIsSymbolIteratorAtEnd': ('LLVMBool',
                                  ['LLVMObjectFileRef', 'LLVMSymbolIteratorRef']),
    'LLVMMoveToNextSymbol': (None,
                             ['LLVMSymbolIteratorRef']),
    'LLVMGetSectionName': (ctypes.POINTER(ctypes.c_char),
                           ['LLVMSectionIteratorRef']),
    'LLVMGetSectionSize': (ctypes.c_uint64,
                           ['LLVMSectionIteratorRef']),
    'LLVMGetSectionContents': (ctypes.POINTER(ctypes.c_char),
                               ['LLVMSectionIteratorRef']),
    'LLVMGetSectionAddress': (ctypes.c_uint64,
                              ['LLVMSectionIteratorRef']),
    'LLVMGetSectionContainsSymbol': ('LLVMBool',
                                     ['LLVMSectionIteratorRef', 'LLVMSymbolIteratorRef']),
    'LLVMGetRelocations': (c_object_p,
                           ['LLVMSectionIteratorRef']),
    'LLVMDisposeRelocationIterator': (None,
                                      ['LLVMRelocationIteratorRef']),
    'LLVMIsRelocationIteratorAtEnd': ('LLVMBool',
                                      ['LLVMSectionIteratorRef', 'LLVMRelocationIteratorRef']),
    'LLVMMoveToNextRelocation': (None,
                                 ['LLVMRelocationIteratorRef']),
    'LLVMGetSymbolName': (ctypes.POINTER(ctypes.c_char),
                          ['LLVMSymbolIteratorRef']),
    'LLVMGetSymbolAddress': (ctypes.c_uint64,
                             ['LLVMSymbolIteratorRef']),
    'LLVMGetSymbolFileOffset': (ctypes.c_uint64,
                                ['LLVMSymbolIteratorRef']),
    'LLVMGetSymbolSize': (ctypes.c_uint64,
                          ['LLVMSymbolIteratorRef']),
    'LLVMGetRelocationAddress': (ctypes.c_uint64,
                                 ['LLVMRelocationIteratorRef']),
    'LLVMGetRelocationOffset': (ctypes.c_uint64,
                                ['LLVMRelocationIteratorRef']),
    'LLVMGetRelocationSymbol': (c_object_p,
                                ['LLVMRelocationIteratorRef']),
    'LLVMGetRelocationType': (ctypes.c_uint64,
                              ['LLVMRelocationIteratorRef']),
    'LLVMGetRelocationTypeName': (ctypes.POINTER(ctypes.c_char),
                                  ['LLVMRelocationIteratorRef']),
    'LLVMGetRelocationValueString': (ctypes.POINTER(ctypes.c_char),
                                     ['LLVMRelocationIteratorRef']),
}

enum_declarations = {
}

